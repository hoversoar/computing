* 准备中的问题
  :PROPERTIES:
  :CUSTOM_ID: 准备中的问题
  :END:

** [[http://cfd-china.com/topic/2188/25%E4%BA%BF%E7%BD%91%E6%A0%BC%E7%9B%B4%E6%8E%A5%E6%A8%A1%E6%8B%9F/7][mesh]]
   :PROPERTIES:
   :CUSTOM_ID: mesh
   :END:

** [[http://cfd-china.com/topic/2053/%E5%88%86%E4%BA%AB-%E4%B8%80%E4%B8%AA-latex-%E8%AE%BA%E6%96%87%E6%A8%A1%E6%9D%BF/10][灰沉积]]
   :PROPERTIES:
   :CUSTOM_ID: 灰沉积
   :END:

   从刘开琪研究员提供的图片上来看,
** [[http://cfd-china.com/topic/664/cd%E8%AE%A1%E7%AE%97%E4%B8%8D%E5%87%86%E7%9A%84%E9%97%AE%E9%A2%98-les-re3900-%E4%B8%89%E7%BB%B4%E5%9C%86%E6%9F%B1%E7%BB%95%E6%B5%81-pisofoam/1040][等值面]]
   :PROPERTIES:
   :CUSTOM_ID: 等值面
   :END:

#+BEGIN_QUOTE
  再次打扰了，我想做一下尾部三维的涡结构，可是为什么创建 contour
  等值面时，contour by 后面的选项只有压力 P 和 nut ，并没有后来
  vorticity 命令计算出来的变量 vorticity，vorticity
  只能以云图的形式出现，我需要怎样创建 wake 的结构呢？
#+END_QUOTE

因为你的数据中没有包含 vorticity。
通常来讲，你需要在后处理的过程中来处理。比如 ( OF v4.1 )：

#+BEGIN_EXAMPLE
    pisoFoam -postProcess -func -vorticity
#+END_EXAMPLE

漩涡在数学上的定义是速度的旋度：curl of velocity

#+BEGIN_SRC latex
    \begin{equations}
    \omega = \nabla \times  V
    \end{equations}
#+END_SRC

漩涡在流体力学中经常被用到，但是如果深入探讨这个概念，其实这不是一个假单的概念。

#+BEGIN_QUOTE
  The notion of a vortex is so widely used in fluid dynamics that few
  pause to examine what the word strictly means. Those who do take a
  closer look quickly realize the difficulty of defining vortices
  unambiguously.
#+END_QUOTE

Chong et al. (1990)
年的时候，用速度梯度的特征根，在拉格朗日座标系下讨论了流场中任意一点的流场特征。他们说流场核心的区域就是速度梯度的复特征值。
就我个人来讲， 对尾流区涡状结构的宏观分析，我会选用一些准则：

example:
[[http://cfd-china.com/topic/2133/paraview%E8%BE%93%E5%87%BA%E5%B0%BE%E6%B6%A1/2][so cool]]

** [[http://cfd-china.com/topic/2127/%E5%85%B3%E4%BA%8Etmp-volscalarfield-%E7%94%A8%E6%B3%95%E7%9A%84%E7%96%91%E9%97%AE][c++
模板]]
   :PROPERTIES:
   :CUSTOM_ID: c-模板
   :END:

** [[http://www.cfd-china.com/topic/2132/%E9%A2%97%E7%B2%92%E7%94%B5%E9%87%8F][静电场]]
   :PROPERTIES:
   :CUSTOM_ID: 静电场
   :END:

** [[http://cfd-china.com/topic/612/%E4%BA%8C%E7%BB%B4%E8%87%AA%E9%80%82%E5%BA%94%E7%BD%91%E6%A0%BC/18][自适应网格]]
   :PROPERTIES:
   :CUSTOM_ID: 自适应网格
   :END:

** [[http://cfd-china.com/topic/2133/paraview%E8%BE%93%E5%87%BA%E5%B0%BE%E6%B6%A1/2][进口边界条件]]
   :PROPERTIES:
   :CUSTOM_ID: 进口边界条件
   :END:

** [[http://cfd-china.com/topic/2118/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E6%B9%8D%E6%B5%81%E5%BC%BA%E5%BA%A6-%E6%98%AF%E4%B8%80%E7%BB%84%E5%8F%98%E5%8C%96%E7%9A%84%E6%95%B0%E5%80%BC-%E8%BF%98%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8D%95%E7%8B%AC%E7%9A%84%E6%95%B0%E5%80%BC][什么是湍流]]
   :PROPERTIES:
   :CUSTOM_ID: 什么是湍流
   :END:

** [[http://cfd-china.com/post/11368][丑丑的c++]]
   :PROPERTIES:
   :CUSTOM_ID: 丑丑的c
   :END:

#+BEGIN_SRC C++
    if (phase1_.divU().valid() && phase2_.divU().valid())
        {
            tdgdt =
            (
                alpha2()
               *phase1_.divU()()()
              - alpha1()
               *phase2_.divU()()()
            );
        }
#+END_SRC

** [[http://cfd-china.com/topic/2257/%E7%BB%93%E6%9E%84%E7%BD%91%E6%A0%BC%E6%B1%82%E8%A7%A3%E5%99%A8%E4%B8%8E%E9%9D%9E%E7%BB%93%E6%9E%84%E7%BD%91%E6%A0%BC%E6%B1%82%E8%A7%A3%E5%99%A8%E7%9A%84%E5%8C%BA%E5%88%AB][非结构 vs 结构]]
   :PROPERTIES:
   :CUSTOM_ID: 非结构-vs-结构
   :END:

*** 什么是结构网格
    :PROPERTIES:
    :CUSTOM_ID: 什么是结构网格
    :END:

*** 什么是非结构网格
    :PROPERTIES:
    :CUSTOM_ID: 什么是非结构网格
    :END:

*** OF 用的什么方法来对网格进行编号？
    :PROPERTIES:
    :CUSTOM_ID: of-用的什么方法来对网格进行编号
    :END:

*** 参考资料
    :PROPERTIES:
    :CUSTOM_ID: 参考资料
    :END:

[[https://mp.weixin.qq.com/s/lU125w8CgGHYU1Qvdzm3kQ][节点or体心?]]

** [[http://cfd-china.com/topic/2260/fsifoam-flux-requested-but-p-not-specified-in-fluxrequired][通量不要求压力]]
   :PROPERTIES:
   :CUSTOM_ID: 通量不要求压力
   :END:

* 打包过的问题
  :PROPERTIES:
  :CUSTOM_ID: 打包过的问题
  :END:

* 用到的工具
  :PROPERTIES:
  :CUSTOM_ID: 用到的工具
  :END:

** http://upli.st/l/list-of-all-ascii-emoticons
   :PROPERTIES:
   :CUSTOM_ID: httpupli.stllist-of-all-ascii-emoticons
   :END:

** https
   :PROPERTIES:
   :CUSTOM_ID: https
   :END:

* [[http://cfd-china.com/topic/2998/%25E8%25AF%25B7%25E9%2597%25AE%25E5%25A4%25A7%25E7%25A5%259E%25E4%25BB%25AC-%25E8%25BF%2599%25E4%25B8%25AA%25E5%2587%25BD%25E6%2595%25B0%25E6%259C%2580%25E5%2590%258E%25E5%2588%25B0%25E5%25BA%2595%25E6%258C%2587%25E5%2590%2591%25E4%25BA%2586%25E5%2593%25AA-this-append-pptr][this->append(pPtr)]]
** which append() of this function is really using?
** what's the difference between intrusive and non-intrusive lists?
** why there are two classes for intrusive linked lists?
** why UIList doesn't have a destructor, wheras UUList has?
** every classs should have its destructor?
** why there is no declaration of class LListBase ?
** some thoughts:

 Inheritance:

 cloud -> IDLList<ParticleType> or ILList -> LListBase


 #+begin_src c++
 src/lagrangian/basic/Cloud/Cloud.H

 template<class ParticleType>
 class Cloud
 :
     public cloud,
     public IDLList<ParticleType>
 {


 src/OpenFOAM/containers/LinkedLists/user/IDLList.H

 it seems a alias to IDLList:

     using IDLList = ILList<DLListBase, T>;

 i.e., intrusive linked lists


 Foam::ILList<LListBase, T>::ILList(const ILList<LListBase, T>& lst)
 :
 UILList<LListBase, T>()


 class UILList
 :
    public LListBase


 src/OpenFOAM/containers/LinkedLists/linkTypes/DLListBase/DLListBase.H

 void append(link*);

 #+end_src
